<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Community Chat</title>
    <link rel="stylesheet" href="/stylesheets/chat.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <section class="community-chat-section">
        <nav class="community-nav">
            <div class="community-logo">
                <img src="data:image/jpeg;base64,<%= community.CommunityDP.toString('base64') %>" alt="Community Logo">
            </div>
            <h2 class="community-name"><%= community.CommunityName %></h2>
            <div class="icon-container">
                <span class="icon">&#9776;</span>
                <div class="icon-dropdown-menu">
                    <ul>
                        <li><a href="/"><i class="fas fa-home"></i> Home</a></li>
                        <li><a href="/Settings"><i class="fas fa-cogs"></i> Settings</a></li>
                        <li><a href="/Members/<%= community._id %>"><i class="fas fa-users"></i> Members</a></li>
                        <li><a href="/Chat-Notifications"><i class="fas fa-bell"></i> Notifications</a></li>
                        <li><a href="/logout"><i class="fas fa-sign-out-alt"></i> Log-out</a></li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="chat-container">
            <div class="chat-panel">                     </div>
            <% if(member || type === "Public") { %>
            <div class="input-section">
                <div class="file-options">
                    <i class="fas fa-paperclip clip-icon"></i>
                    <div class="dropdown-menu">
                        <ul class="dropdown-list">
                            <li><a href="#"><i class="fas fa-camera"></i> Camera</a></li>
                            <li><a href="#"><i class="fas fa-images"></i> Gallery</a></li>
                            <li><a href="#"><i class="fas fa-file-alt"></i> Document</a></li>
                            <li><a href="#"><i class="fas fa-poll"></i> Poll</a></li>
                        </ul>
                    </div>
                </div>
                <input type="text" placeholder="Type your message" class="message-input">
                <button class="send-btn">Send</button>
                <% }else { %>
                    <div class="pay-section">
                    <form action="/Join-community/<%= community._id %>" method="post">
                        <button class="Add-input">Join-community</button>
                    </form>
                </div>
                </a>
                <% } %>
            </div>
        </div>
    </section>
    <script>
        // Close dropdown when clicked outside
        document.addEventListener('click', function (e) {
            const dropdown = document.querySelector('.dropdown-menu');
            const checkbox = document.querySelector('#dropdown-toggle');
            const files = document.querySelector('.file-options');

            if (!files.contains(e.target)) {
        dropdown.style.display = 'none';  // Hide dropdown menu
    } else {
        dropdown.style.display = 'block';  // Show dropdown menu (toggle logic)
    }
        });
    </script>
<script src="/socket.io/socket.io.js"></script>
<script>
const colors = [
    "#e6194B", "#3cb44b", "#ffe119", "#4363d8", "#f58231", 
    "#911eb4", "#42d4f4", "#f032e6", "#bfef45", "#fabebe"
];

function getColorForUser(username) {
    let hash = 0;
    for (let i = 0; i < username.length; i++) {
        hash = username.charCodeAt(i) + ((hash << 5) - hash);
    }
    return colors[Math.abs(hash) % colors.length]; // Pick from preset colors
}

        // Correct the references to input field and add event listeners
const btn = document.querySelector(".send-btn"); 
const socket = io();
const user = "<%= user.username %>";
const communityId = "<%= community._id %>";

socket.emit("joinCommunity", communityId);

socket.on('allMessages', (messages) => {
    const panel = document.querySelector(".chat-panel");
    panel.innerHTML = ''; 

    messages.forEach(message => {
            const messageDiv = document.createElement("div");
            const randomColor = getColorForUser(message.sender);

            if (message.sender === user) {
                messageDiv.classList.add("self-msg");
                messageDiv.innerHTML = `<span style="color:${randomColor}">Self:</span><p>${message.Message}</p>`;
            } else {
                messageDiv.classList.add("chat-msg");
                messageDiv.innerHTML = `<span style="color:${randomColor}">${message.sender}:</span><p>${message.Message}</p>`;
            }
            panel.appendChild(messageDiv);
        });
    });

btn.addEventListener("click", () => {
    sendMessage();
});

document.querySelector(".message-input").addEventListener("keydown", (event) => {
    if (event.key === "Enter") { // Prevent the default "Enter" behavior (e.g., new line)
        sendMessage();
    }
});

function sendMessage() {
    const panel = document.querySelector(".chat-panel");
    const message = document.querySelector(".message-input").value; // Correct reference
    document.querySelector(".message-input").value = ""; // Clear input field
    if (message) {
        socket.emit("chatMessage", { username: user, message, communityId }); // Send message to server
    }
}



// Listen for incoming messages
socket.on("chatMessage", (data) => {
    const panel = document.querySelector(".chat-panel");
    const message = document.createElement("div");

    const randomColor = getColorForUser(data.username)

    if(data.username === user){
        message.classList.add("self-msg");
        message.innerHTML = `<span style="color:${randomColor}">Self:</span><p>${data.message}</p>`;
    }else{
        message.classList.add("chat-msg");
        message.innerHTML = `<span style="color:${randomColor}">${data.username}:</span><p>${data.message}</p>`;
    }
    panel.appendChild(message);
});

    </script>
     <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
     <script>
         const community = "<%= community._id %>"; // Dynamically set the live._id from your backend
         const options = {
             key: "rzp_test_HPAKSJHzTmYhop", // Replace with your Razorpay test/live Key ID
             amount: 1900, // Amount in paise (â‚¹500)
             currency: "INR",
             name: "Your Company Name",
             description: "Test Transaction",
             handler: function (response) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/Community/${community}/payment`;
             },
             prefill: {
                 name: "Test User",
                 email: "test.user@example.com",
                 contact: "9999999999"
             },
             theme: {
                 color: "#3399cc"
             }
         };
 
         const rzp = new Razorpay(options);
 
         document.getElementById("rzp-button1").onclick = function (e) {
             rzp.open();
             e.preventDefault();
         };
     </script>
</body>
</html>